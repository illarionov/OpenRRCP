diff -urP tcpdump-3.9.8/ethertype.h tcpdump-3.9.8-my/ethertype.h
--- tcpdump-3.9.8/ethertype.h	2005-07-11 22:31:58.000000000 +0400
+++ tcpdump-3.9.8-my/ethertype.h	2007-11-03 00:59:24.000000000 +0300
@@ -130,6 +130,9 @@
 #ifndef ETHERTYPE_EAPOL
 #define ETHERTYPE_EAPOL  	0x888e
 #endif
+#ifndef ETHERTYPE_RRCP
+#define ETHERTYPE_RRCP  	0x8899
+#endif
 #ifndef	ETHERTYPE_LOOPBACK
 #define	ETHERTYPE_LOOPBACK	0x9000
 #endif
diff -urP tcpdump-3.9.8/FILES tcpdump-3.9.8-my/FILES
--- tcpdump-3.9.8/FILES	2007-09-26 05:59:52.000000000 +0400
+++ tcpdump-3.9.8-my/FILES	2007-11-03 00:51:56.000000000 +0300
@@ -183,6 +183,7 @@
 print-pptp.c
 print-radius.c
 print-raw.c
+print-rrcp.c
 print-rip.c
 print-ripng.c
 print-rsvp.c
diff -urP tcpdump-3.9.8/INSTALL tcpdump-3.9.8-my/INSTALL
--- tcpdump-3.9.8/INSTALL	2007-09-26 05:59:52.000000000 +0400
+++ tcpdump-3.9.8-my/INSTALL	2007-11-03 00:52:32.000000000 +0300
@@ -197,6 +197,7 @@
 print-pptp.c	- Point-to-Point Tunnelling Protocol printer routines
 print-radius.c	- Radius protocol printer routines
 print-raw.c	- Raw IP printer routines
+print-rrcp.c	- Realtek Remote Control Protocol
 print-rip.c	- Routing Information Protocol printer routines
 print-ripng.c	- IPv6 Routing Information Protocol printer routines
 print-rsvp.c	- Resource reSerVation Protocol (RSVP) printer routines
diff -urP tcpdump-3.9.8/Makefile.in tcpdump-3.9.8-my/Makefile.in
--- tcpdump-3.9.8/Makefile.in	2007-09-26 05:59:52.000000000 +0400
+++ tcpdump-3.9.8-my/Makefile.in	2007-11-03 00:50:45.000000000 +0300
@@ -82,7 +82,7 @@
 	print-lwres.c print-mobile.c print-mpls.c print-msdp.c \
 	print-nfs.c print-ntp.c print-null.c print-olsr.c print-ospf.c \
 	print-pgm.c print-pim.c print-ppp.c print-pppoe.c \
-	print-pptp.c print-radius.c print-raw.c print-rip.c \
+	print-pptp.c print-radius.c print-rrcp.c print-raw.c print-rip.c \
 	print-rsvp.c print-rx.c print-sctp.c print-sip.c print-sl.c print-sll.c \
 	print-slow.c print-snmp.c print-stp.c print-sunatm.c print-sunrpc.c \
 	print-symantec.c print-syslog.c print-tcp.c print-telnet.c print-tftp.c \
diff -urP tcpdump-3.9.8/netdissect.h tcpdump-3.9.8-my/netdissect.h
--- tcpdump-3.9.8/netdissect.h	2006-09-19 23:07:56.000000000 +0400
+++ tcpdump-3.9.8-my/netdissect.h	2007-11-03 01:03:24.000000000 +0300
@@ -245,7 +245,9 @@
 #include <pcap.h>
 
 
-extern void eap_print(netdissect_options *,const u_char *, u_int);    
+extern void eap_print(netdissect_options *,const u_char *, u_int);
+extern void rrcp_print(netdissect_options *,const u_char *, u_int);
+
 extern int esp_print(netdissect_options *,
 		     register const u_char *bp, int len, register const u_char *bp2,
 		     int *nhdr, int *padlen);
diff -urP tcpdump-3.9.8/print-ether.c tcpdump-3.9.8-my/print-ether.c
--- tcpdump-3.9.8/print-ether.c	2006-09-19 23:07:56.000000000 +0400
+++ tcpdump-3.9.8-my/print-ether.c	2007-11-11 23:19:04.000000000 +0300
@@ -69,6 +69,7 @@
     { ETHERTYPE_PPPOED,         "PPPoE D" },
     { ETHERTYPE_PPPOES,         "PPPoE S" },
     { ETHERTYPE_EAPOL,          "EAPOL" },
+    { ETHERTYPE_RRCP,           "RRCP" },
     { ETHERTYPE_JUMBO,          "Jumbo" },
     { ETHERTYPE_LOOPBACK,       "Loopback" },
     { ETHERTYPE_ISO,            "OSI" },
@@ -291,6 +292,10 @@
 	        eap_print(gndo, p, length);
 		return (1);
 
+	case ETHERTYPE_RRCP:
+	        rrcp_print(gndo, p - 14 , length + 14);
+		return (1);
+
 	case ETHERTYPE_PPP:
 		if (length) {
 			printf(": ");
diff -urP tcpdump-3.9.8/print-rrcp.c tcpdump-3.9.8-my/print-rrcp.c
--- tcpdump-3.9.8/print-rrcp.c	1970-01-01 03:00:00.000000000 +0300
+++ tcpdump-3.9.8-my/print-rrcp.c	2007-11-12 00:00:47.000000000 +0300
@@ -0,0 +1,139 @@
+/*
+ * Copyright (c) 2007 - Andrey "nording" Chernyak <andrew@nording.ru>
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that: (1) source code distributions
+ * retain the above copyright notice and this paragraph in its entirety, (2)
+ * distributions including binary code include the above copyright notice and
+ * this paragraph in its entirety in the documentation or other materials
+ * provided with the distribution, and (3) all advertising materials mentioning
+ * features or use of this software display the following acknowledgement:
+ * ``This product includes software developed by the University of California,
+ * Lawrence Berkeley Laboratory and its contributors.'' Neither the name of
+ * the University nor the names of its contributors may be used to endorse
+ * or promote products derived from this software without specific prior
+ * written permission.
+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
+ * WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
+ * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
+ *
+ * Format and print Realtek Remote Control Protocol (RRCP)
+ * and Realtek Echo Protocol (RRCP-REP) packets.
+ */
+
+#ifndef lint
+static const char rcsid[] _U_ =
+    "@(#) $Header: /tcpdump/master/tcpdump/print-rrcp.c,v 1.0 2007/11/11 19:03:39 nording Exp $";
+#endif
+
+#ifdef HAVE_CONFIG_H
+#include "config.h"
+#endif
+
+#include <tcpdump-stdinc.h>
+
+#include <stdio.h>
+#include <string.h>
+
+#include "netdissect.h"
+#include "addrtoname.h"
+#include "extract.h"
+#include "ether.h"
+
+#ifndef ETH_ALEN 
+#define ETH_ALEN 6
+#endif
+
+struct rrcp_packet_t
+{
+  uint16_t rrcp_ethertype;		/* 0x8899 */
+  uint8_t  rrcp_proto;			/* must be 0x01         */
+  uint8_t  rrcp_opcode:7;               /* 0x00 = hello, 0x01 = get, 0x02 = set */
+  uint8_t  rrcp_isreply:1;              /* 0 = request to switch, 1 = reply from switch */
+  uint16_t rrcp_authkey;		/* 0x2379 by default */
+  uint16_t rrcp_reg_addr;		/* register address */
+  uint32_t rrcp_reg_data;		/* register data */
+  uint32_t cookie1;
+  uint32_t cookie2;
+};
+
+struct rrcp_helloreply_packet_t
+{
+  uint16_t rrcp_ethertype;		/* 0x8899 */
+  uint8_t  rrcp_proto;			/* must be 0x01         */
+  uint8_t  rrcp_opcode:7;               /* 0x00 = hello, 0x01 = get, 0x02 = set */
+  uint8_t  rrcp_isreply:1;              /* 0 = request to switch, 1 = reply from switch */
+  uint16_t rrcp_authkey;		/* 0x2379 by default */
+  uint8_t  rrcp_downlink_port;		/*  */
+  uint8_t  rrcp_uplink_port;		/*  */
+  uint8_t  rrcp_uplink_mac[ETH_ALEN];   /*  */
+  uint16_t rrcp_chip_id;		/*  */
+  uint32_t rrcp_vendor_id;		/*  */
+};
+
+
+/*
+ * Print RRCP requests
+ */
+void
+rrcp_print(netdissect_options *ndo,
+	  register const u_char *cp,
+	  u_int length _U_)
+{
+	const struct rrcp_packet_t *rrcp;
+	const struct rrcp_helloreply_packet_t *rrcp_hello;
+	register const struct ether_header *ep;
+	char proto_str[16];
+	char opcode_str[32];
+
+	ep = (const struct ether_header *)cp;
+	rrcp = (const struct rrcp_packet_t *)(cp+12);
+	rrcp_hello = (const struct rrcp_helloreply_packet_t *)(cp+12);
+
+	if (rrcp->rrcp_proto==1){
+	    strcpy(proto_str,"RRCP");
+	}else if ( rrcp->rrcp_proto==2 ){
+	    strcpy(proto_str,"RRCP-REP");
+	}else if ( rrcp->rrcp_proto==3 ){
+	    strcpy(proto_str,"RRCP loop detect");
+	}else{
+	    sprintf(proto_str,"RRCP-0x%02d",rrcp->rrcp_proto);
+	}
+	if (rrcp->rrcp_opcode==0){
+	    strcpy(opcode_str,"hello");
+	}else if ( rrcp->rrcp_opcode==1 ){
+	    strcpy(opcode_str,"get");
+	}else if ( rrcp->rrcp_opcode==2 ){
+	    strcpy(opcode_str,"set");
+	}else{
+	    sprintf(opcode_str,"unknown opcode (0x%02d)",rrcp->rrcp_opcode);
+	}
+        ND_PRINT((ndo, "%s > %s, %s %s",
+		etheraddr_string(ESRC(ep)),
+		etheraddr_string(EDST(ep)),
+		proto_str, rrcp->rrcp_isreply ? "reply" : "query"));
+	if (rrcp->rrcp_proto==1){
+    	    ND_PRINT((ndo, ": %s", opcode_str));
+	}
+	if (rrcp->rrcp_opcode==1 || rrcp->rrcp_opcode==2){
+    	    ND_PRINT((ndo, " addr=0x%04x, data=0x%04x",
+		     rrcp->rrcp_reg_addr, rrcp->rrcp_reg_data, rrcp->rrcp_authkey));
+	}
+	if (rrcp->rrcp_proto==1){
+    	    ND_PRINT((ndo, ", auth=0x%04x",
+		  ntohs(rrcp->rrcp_authkey)));
+	}
+	if (rrcp->rrcp_proto==1 && rrcp->rrcp_opcode==0 && rrcp->rrcp_isreply){
+    	    ND_PRINT((ndo, " downlink_port=%d, uplink_port=%d, uplink_mac=%s, vendor_id=%08x ,chip_id=%04x ",
+		     rrcp_hello->rrcp_downlink_port,
+		     rrcp_hello->rrcp_uplink_port,
+		     etheraddr_string(rrcp_hello->rrcp_uplink_mac),
+		     rrcp_hello->rrcp_vendor_id,
+		     rrcp_hello->rrcp_chip_id));
+	}else if (rrcp->rrcp_opcode==1 || rrcp->rrcp_opcode==2 || rrcp->rrcp_proto==2){
+    	ND_PRINT((ndo, ", cookie=0x%08x%08x ",
+		    rrcp->cookie2, rrcp->cookie1));
+	}
+        if (!ndo->ndo_vflag)
+              return;
+}
diff -urP tcpdump-3.9.8/win32/prj/GNUmakefile tcpdump-3.9.8-my/win32/prj/GNUmakefile
--- tcpdump-3.9.8/win32/prj/GNUmakefile	2007-09-26 05:59:54.000000000 +0400
+++ tcpdump-3.9.8-my/win32/prj/GNUmakefile	2007-11-03 00:53:23.000000000 +0300
@@ -108,6 +108,7 @@
 	../../print-pptp.o \
 	../../print-radius.o \
 	../../print-raw.o \
+	../../print-rrcp.o \
 	../../print-rip.o \
 	../../print-ripng.o \
 	../../print-rsvp.o \
diff -urP tcpdump-3.9.8/win32/prj/WinDump.dsp tcpdump-3.9.8-my/win32/prj/WinDump.dsp
--- tcpdump-3.9.8/win32/prj/WinDump.dsp	2007-09-26 05:59:54.000000000 +0400
+++ tcpdump-3.9.8-my/win32/prj/WinDump.dsp	2007-11-03 00:53:08.000000000 +0300
@@ -445,6 +445,10 @@
 # End Source File
 # Begin Source File
 
+SOURCE="..\..\print-rrcp.c"
+# End Source File
+# Begin Source File
+
 SOURCE="..\..\print-rip.c"
 # End Source File
 # Begin Source File
